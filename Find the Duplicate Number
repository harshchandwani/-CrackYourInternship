//Brute Force

class Solution {
public:
    int findDuplicate(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        if(n == 1){
            return nums[0];
        }
        int res =0;
        for(int i=1;i<n;i++){
            if(nums[i-1] == nums[i]){
                res = nums[i];
                break;
            }
            
        }
        return res;
    }
};

//Using Cyclic Sort
//check->swap->move
lass Solution {
public:
    int findDuplicate(vector<int>& nums) {
        int n = nums.size();
        int i=0;
        while(i < n){
            if(nums[i] != i +1){
                int correct = nums[i] - 1;
                if(nums[i] != nums[correct]){
                    swap(nums[i], nums[correct]);
                }
                else{
                    return nums[i];
                }
            }
            else{
                i++;
            }
        }
        return -1;
    }
};
